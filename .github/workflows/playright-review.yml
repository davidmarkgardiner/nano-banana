name: Playwright Tests on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  wait-for-vercel-preview:
    name: Wait for Vercel Preview
    runs-on: ubuntu-latest
    outputs:
      preview-url: ${{ steps.waitForVercel.outputs.url }}
    steps:
      - name: Waiting for 200 from Vercel Preview
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.1
        id: waitForVercel
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 600
          # Optional: specify check interval in seconds
          # check_interval: 5

  playwright-tests:
    name: Run Playwright Tests
    needs: wait-for-vercel-preview
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run Playwright tests
        env:
          PLAYWRIGHT_BASE_URL: ${{ needs.wait-for-vercel-preview.outputs.preview-url }}
          CI: true
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 30

  # Optional: Comment test results on PR
  comment-on-pr:
    name: Comment Test Results
    needs: [playwright-tests, wait-for-vercel-preview]
    runs-on: ubuntu-latest
    if: always()
    permissions:
      pull-requests: write
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const preview_url = '${{ needs.wait-for-vercel-preview.outputs.preview-url }}';
            const test_status = '${{ needs.playwright-tests.result }}';
            const status_emoji = test_status === 'success' ? '✅' : '❌';
            
            const comment = `## ${status_emoji} Playwright Test Results
            
            **Preview URL**: ${preview_url}
            **Test Status**: ${test_status}
            **Workflow Run**: [View Details](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ${test_status === 'success' 
              ? '✨ All Playwright tests passed successfully!' 
              : '⚠️ Some tests failed. Check the workflow run for details.'}`;
            
            try {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Error commenting on PR:', error);
            }